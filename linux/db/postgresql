select * from information_schema.tables ;
select * from information_schema.columns where data_type like '%bit%'  ;

select table_schema from information_schema.tables where table_name='t_gl_org';

select * from information_schema.tables order by table_name limit 5 offset 0 ;
意思是，起点0开始查询，返回5条数据。

拼接字符串
select id, 
array_to_string 
( 
ARRAY ( 
SELECT kw 
FROM liutest gi 
WHERE gi.id = gd.id 
), 
', ' 
) AS group_concat 
FROM liutest gd 
ORDER BY 
id;
拼接字符串
CREATE AGGREGATE group_concat(anyelement)
(
    sfunc = array_append, -- 每行的操作函数，将本行append到数组里 
    stype = anyarray,  -- 聚集后返回数组类型 
    initcond = '{}'    -- 初始化空数组
);
insert into   "public".test_tieba2 
select max(id),
       max(answer_time),
       max(author),
       array_to_string(group_concat(trim(content)),'||||'),
       null,
       question_id
from "public".test_tieba
group by question_id;

MySQL更新表
update  "public".test_tieba2 t1,"public".test_tieba_question t2
set t1.author=t2.title
where t1.question_id=t2.id;

postgresql更新表
update  "public".test_tieba3 t1  set t1.author=t2.title from   "public".test_tieba_question t2
where t1.question_id=t2.id;

类似merge into操作
   
 INSERT INTO "public".baidu_news(id, label) VALUES('2077','1')
 ON CONFLICT ( id )
do UPDATE SET label = EXCLUDED.label;
===================
CREATE TABLE "public"."baidu_news_predict" (
"id" int8 DEFAULT nextval('baidu_news_predict_id_seq'::regclass) NOT NULL,
"createtime" timestamp(6),
"content" text COLLATE "default",
"intro" varchar(255) COLLATE "default",
"keyword" text COLLATE "default",
"label" varchar(255) COLLATE "default",
"source" varchar(255) COLLATE "default",
"time" varchar(255) COLLATE "default",
"title" varchar(255) COLLATE "default",
"url" text COLLATE "default",
"website" varchar(255) COLLATE "default",
"modifiedtime" timestamp(6) DEFAULT (now() + '08:00:00'::interval),
CONSTRAINT "baidu_news_predict_pkey" PRIMARY KEY ("id")
)
WITH (OIDS=FALSE);

ALTER TABLE "public"."baidu_news_predict" OWNER TO "TXDB";

CREATE TRIGGER "t_predict" BEFORE UPDATE ON "public"."baidu_news_predict"
FOR EACH ROW
EXECUTE PROCEDURE "upd_timestamp"();
=====================================
\du; 查看用户及权限
CREATE ROLE replica login replication encrypted password 'replica'

mysqlslap -hhdf-3 -P8066 --concurrency=1000 --iterations=1 --create-schema='TESTZB' --query='select * from pgbench_accounts where aid='9';' --number-of-queries=10000 --debug-info -uroot -p123456

mysqlslap -hhdf-3 -P8066 --concurrency=200 --iterations=1 --create-schema='txnc' --query="select * from antifraud_user where code='66027707';" --number-of-queries=10000 -uroot -p123456


\c txnc;
alter table up_bd_psndoc alter dataoriginflag type numeric(38,0) using dataoriginflag::numeric(38,0);
